// Generated by CoffeeScript 1.7.1
(function() {
  var Section, assert, cube, http, isOdd5d, sectionFunctions;

  cube = require('../simpleFunctions').cube;

  isOdd5d = require('../simpleFunctions').isFiveDigitOddNumber;

  sectionFunctions = require('../routes/section');

  Section = require('../schemas/schemas').Section;

  http = require('http');

  assert = require('assert');

  describe('testing a coffeescript cube function', function() {
    it('3 cubed is 27', function() {
      return assert.equal(27, cube(3));
    });
    return it('-3 cubed is -27', function() {
      return assert.equal(-27, cube(-3));
    });
  });

  describe('incomplete test coverage example', function() {
    it('5 is not one', function() {
      return assert.equal(false, isOdd5d(5));
    });
    return it('30525 is not one', function() {
      return assert.equal(false, isOdd5d(30524));
    });
  });

  describe('Create, read, update, and delete a Section', function() {
    return it('Creates and saves a Section', function() {
      var callback, newSection, options, request;
      newSection = {
        title: 'Test section',
        htmlId: 'test',
        body: 'Hello world',
        link: 'http://www.google.com',
        category: 'test',
        __v: '0'
      };
      options = {
        hostname: 'localhost',
        port: 3000,
        path: '/section',
        method: 'POST'
      };
      callback = function(response) {
        var str;
        str = '';
        response.on('data', function(txt) {
          return str += txt;
        });
        return response.on('end', function() {
          return console.log(str);
        });
      };
      request = new http.request(options);
      request.body = newSection;
      console.log(request);
      sectionFunctions.create(request, callback).end();
      return newSection.save();
    });
  });

}).call(this);

//# sourceMappingURL=tests.map
